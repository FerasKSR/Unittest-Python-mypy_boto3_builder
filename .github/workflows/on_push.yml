name: Code style and test

on:
  push: {}
  workflow_dispatch: {}

jobs:
  unit-tests:
    name: Code style & unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - "3.10"
          - "3.11"
          - "3.12"
        include:
          - version: "3.10"
            check-lint: "true"
            check-typing: "true"
          - version: "3.11"
            check-lint: "true"
            check-typing: "true"
          - version: "3.12"
            check-lint: "true"
            check-typing: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.version }}"
          cache: "poetry"
      - name: Install dependencies
        run: |
          poetry install -n
          poetry run pip install -U --no-dependencies aiobotocore types-aiobotocore
      - name: Lint
        if: ${{ matrix.check-lint }}
        run: |
          poetry run ruff check mypy_boto3_builder --output-format github
          poetry run ruff check scripts --output-format github
      - name: Set up Node
        if: ${{ matrix.check-typing }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install Node.js dependencies
        if: ${{ matrix.check-typing }}
        run: |
          npm install -g pyright
      - name: Typing
        if: ${{ matrix.check-typing }}
        run: |
          poetry run pyright mypy_boto3_builder
      - name: Test
        run: |
          poetry run pytest
