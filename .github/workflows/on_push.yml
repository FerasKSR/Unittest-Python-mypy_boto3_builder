name: Code style and test

on:
  push: {}
  workflow_dispatch: {}

jobs:
  unit-tests:
    name: Code style & unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python for Poetry
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install poetry
        run: |
          python -m pip install poetry pip
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: |
          poetry install -n
          poetry run pip install -U aiobotocore types-aiobotocore
          poetry install -n
      - name: Install Node.js dependencies
        run: |
          npm install -g pyright
      - name: Lint
        run: |
          poetry run flake8 mypy_boto3_builder
          poetry run npx pyright mypy_boto3_builder
          poetry run mypy mypy_boto3_builder
          poetry run black --check mypy_boto3_builder tests
          poetry run isort -c mypy_boto3_builder tests
      - name: Test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          poetry run pytest

  integration-tests:
    name: Integration tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python for Poetry
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install poetry
        run: |
          python -m pip install poetry pip
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: |
          poetry install -n
          poetry run pip install -U aiobotocore
          poetry install -n
      - name: Install Node.js dependencies
        run: |
          npm install -g pyright
      - name: Integration tests
        run: |
          poetry run python scripts/integration.py
      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mypy_boto3_output
          path: mypy_boto3_output

  sanity-check:
    name: Sanity check
    if: github.ref == 'refs/heads/main'
    needs: integration-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
            name: mypy_boto3_output
            path: mypy_boto3_output
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install mypy flake8 boto3 botocore botocore-stubs boto3-stubs-lite types-requests wheel
      - name: Install Node.js dependencies
        run: |
          npm install -g pyright
      - name: Check output
        run: |
          python scripts/check_output.py
